<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_23) on Thu Jan 17 12:17:41 EST 2013 -->
<TITLE>
Text
</TITLE>

<META NAME="date" CONTENT="2013-01-17">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Text";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Text.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../net/tc/utils/SynchronizedMap.html" title="class in net.tc.utils"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../net/tc/utils/TimeTools.html" title="class in net.tc.utils"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?net/tc/utils/Text.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Text.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
net.tc.utils</FONT>
<BR>
Class Text</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>net.tc.utils.Text</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>Text</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
Utility class for common String operations.  Methods that take Object as a parameter
 will extract the String representation of the object by either casting to
 String or by calling the Object's toString() method.

 <p>Title: ISMA</p>
 <p>Description: </p>
 <p>Copyright: Marco Tusa Copyright (c) 2012 Copyright (c) 2003</p>
 <p>Company: TusaCentral</p>
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>1.0</DD>
<DT><B>Author:</B></DT>
  <DD>Tusa</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#Text()">Text</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#capitalize(java.lang.String)">capitalize</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#castToISONio(java.lang.String, java.lang.String)">castToISONio</A></B>(java.lang.String&nbsp;str,
             java.lang.String&nbsp;sourceEncoding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#castToStringArray(java.lang.Object[])">castToStringArray</A></B>(java.lang.Object[]&nbsp;arr)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#castToUTF(java.lang.String)">castToUTF</A></B>(java.lang.String&nbsp;iso_str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#castToUTFNio(java.lang.String, java.lang.String)">castToUTFNio</A></B>(java.lang.String&nbsp;str,
             java.lang.String&nbsp;sourceEncoding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#defaultTo(java.lang.Object, java.lang.Object)">defaultTo</A></B>(java.lang.Object&nbsp;o,
          java.lang.Object&nbsp;def)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks for null and return def if found.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#defaultToEmpty(java.lang.Object)">defaultToEmpty</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defaults to "" if String is null.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#delimit(java.lang.Object[], java.lang.String)">delimit</A></B>(java.lang.Object[]&nbsp;arr,
        java.lang.String&nbsp;delimiter)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#delimit(java.lang.Object[], java.lang.String, java.lang.String, java.lang.String)">delimit</A></B>(java.lang.Object[]&nbsp;arr,
        java.lang.String&nbsp;delimiter,
        java.lang.String&nbsp;prefix,
        java.lang.String&nbsp;suffix)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#getAsStringSeparated(java.util.List, java.lang.String)">getAsStringSeparated</A></B>(java.util.List&nbsp;l,
                     java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#getEncodedString(java.lang.Object, java.lang.String)">getEncodedString</A></B>(java.lang.Object&nbsp;obj,
                 java.lang.String&nbsp;encoding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#getMultipleResources(java.util.ResourceBundle, java.lang.String[])">getMultipleResources</A></B>(java.util.ResourceBundle&nbsp;rsc,
                     java.lang.String[]&nbsp;keys)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#getUTFStringFromDb(java.lang.String, java.lang.String)">getUTFStringFromDb</A></B>(java.lang.String&nbsp;str,
                   java.lang.String&nbsp;lang)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#isBlank(java.lang.Object)">isBlank</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks if String is null or contains only whitespace</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#isBlank(java.lang.Object[])">isBlank</A></B>(java.lang.Object[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks that entire array has "blank" Strings (null or whitespace)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#isBlank(java.lang.String[])">isBlank</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#isEmpty(java.lang.Object)">isEmpty</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks if String is null or 0 length</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#isEmpty(java.lang.String[])">isEmpty</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks that entire array has "empty" Strings (null or 0 length)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#isNumeric(java.lang.Object)">isNumeric</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#removeAccents(java.lang.Object)">removeAccents</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes accented characters and replace with unaccented equivalent.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#replace(java.lang.String, java.lang.String, java.lang.String)">replace</A></B>(java.lang.String&nbsp;s,
        java.lang.String&nbsp;s1,
        java.lang.String&nbsp;s2)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String replace.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toInt(java.lang.Object, int)">toInt</A></B>(java.lang.Object&nbsp;val,
      int&nbsp;deflt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert a String to an int.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.Integer</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toInteger(java.lang.Object, java.lang.Integer)">toInteger</A></B>(java.lang.Object&nbsp;val,
          java.lang.Integer&nbsp;deflt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert a String to an Integer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toLng(java.lang.Object, long)">toLng</A></B>(java.lang.Object&nbsp;val,
      long&nbsp;deflt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert a String to a long.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.Long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toLong(java.lang.Object, java.lang.Long)">toLong</A></B>(java.lang.Object&nbsp;val,
       java.lang.Long&nbsp;deflt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert a String to a Long.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toProperCase(java.lang.Object)">toProperCase</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toString(java.lang.Object)">toString</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extracts String representation of object by either casting or calling
 its toString() method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#toString(java.lang.Object, java.lang.String)">toString</A></B>(java.lang.Object&nbsp;o,
         java.lang.String&nbsp;def)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extracts String representation of object by either casting or calling
 its toString() method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../net/tc/utils/Text.html#trimTo(java.lang.String, int)">trimTo</A></B>(java.lang.String&nbsp;s,
       int&nbsp;maxChars)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="Text()"><!-- --></A><H3>
Text</H3>
<PRE>
public <B>Text</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="isEmpty(java.lang.Object)"><!-- --></A><H3>
isEmpty</H3>
<PRE>
public static boolean <B>isEmpty</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Checks if String is null or 0 length
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isEmpty(java.lang.String[])"><!-- --></A><H3>
isEmpty</H3>
<PRE>
public static boolean <B>isEmpty</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD>Checks that entire array has "empty" Strings (null or 0 length)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="isBlank(java.lang.String[])"><!-- --></A><H3>
isBlank</H3>
<PRE>
public static boolean <B>isBlank</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isBlank(java.lang.Object[])"><!-- --></A><H3>
isBlank</H3>
<PRE>
public static boolean <B>isBlank</B>(java.lang.Object[]&nbsp;s)</PRE>
<DL>
<DD>Checks that entire array has "blank" Strings (null or whitespace)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="isBlank(java.lang.Object)"><!-- --></A><H3>
isBlank</H3>
<PRE>
public static boolean <B>isBlank</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Checks if String is null or contains only whitespace
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="defaultTo(java.lang.Object, java.lang.Object)"><!-- --></A><H3>
defaultTo</H3>
<PRE>
public static java.lang.String <B>defaultTo</B>(java.lang.Object&nbsp;o,
                                         java.lang.Object&nbsp;def)</PRE>
<DL>
<DD>Checks for null and return def if found.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>o</CODE> - <DD><CODE>def</CODE> - 
<DT><B>Returns:</B><DD>String If null, default.  Otherwise String value of object</DL>
</DD>
</DL>
<HR>

<A NAME="toInt(java.lang.Object, int)"><!-- --></A><H3>
toInt</H3>
<PRE>
public static int <B>toInt</B>(java.lang.Object&nbsp;val,
                        int&nbsp;deflt)</PRE>
<DL>
<DD>Convert a String to an int.  If null or invalid, default value is returned.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>val</CODE> - <DD><CODE>deflt</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="toInteger(java.lang.Object, java.lang.Integer)"><!-- --></A><H3>
toInteger</H3>
<PRE>
public static java.lang.Integer <B>toInteger</B>(java.lang.Object&nbsp;val,
                                          java.lang.Integer&nbsp;deflt)</PRE>
<DL>
<DD>Convert a String to an Integer.  If invalid, default value is returned.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>val</CODE> - <DD><CODE>deflt</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="toLng(java.lang.Object, long)"><!-- --></A><H3>
toLng</H3>
<PRE>
public static long <B>toLng</B>(java.lang.Object&nbsp;val,
                         long&nbsp;deflt)</PRE>
<DL>
<DD>Convert a String to a long.  If null or invalid, default value is returned.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>val</CODE> - <DD><CODE>deflt</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="toLong(java.lang.Object, java.lang.Long)"><!-- --></A><H3>
toLong</H3>
<PRE>
public static java.lang.Long <B>toLong</B>(java.lang.Object&nbsp;val,
                                    java.lang.Long&nbsp;deflt)</PRE>
<DL>
<DD>Convert a String to a Long.  If invalid, default value is returned.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>val</CODE> - <DD><CODE>deflt</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="defaultToEmpty(java.lang.Object)"><!-- --></A><H3>
defaultToEmpty</H3>
<PRE>
public static java.lang.String <B>defaultToEmpty</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Defaults to "" if String is null.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>o</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="delimit(java.lang.Object[], java.lang.String)"><!-- --></A><H3>
delimit</H3>
<PRE>
public static java.lang.String <B>delimit</B>(java.lang.Object[]&nbsp;arr,
                                       java.lang.String&nbsp;delimiter)</PRE>
<DL>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>arr</CODE> - array of values<DD><CODE>delimiter</CODE> - delimiter to use to separate values
<DT><B>Returns:</B><DD>concatented list of values using specified delimiter</DL>
</DD>
</DL>
<HR>

<A NAME="delimit(java.lang.Object[], java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
delimit</H3>
<PRE>
public static java.lang.String <B>delimit</B>(java.lang.Object[]&nbsp;arr,
                                       java.lang.String&nbsp;delimiter,
                                       java.lang.String&nbsp;prefix,
                                       java.lang.String&nbsp;suffix)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="replace(java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
replace</H3>
<PRE>
public static java.lang.String <B>replace</B>(java.lang.String&nbsp;s,
                                       java.lang.String&nbsp;s1,
                                       java.lang.String&nbsp;s2)</PRE>
<DL>
<DD>String replace.  For use with older versions of JDK that do not support
 String.replace().  Can be later replaced with API method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - <DD><CODE>s1</CODE> - <DD><CODE>s2</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="removeAccents(java.lang.Object)"><!-- --></A><H3>
removeAccents</H3>
<PRE>
public static java.lang.String <B>removeAccents</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Removes accented characters and replace with unaccented equivalent.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="toString(java.lang.Object, java.lang.String)"><!-- --></A><H3>
toString</H3>
<PRE>
public static java.lang.String <B>toString</B>(java.lang.Object&nbsp;o,
                                        java.lang.String&nbsp;def)</PRE>
<DL>
<DD>Extracts String representation of object by either casting or calling
 its toString() method.  If null, default is returned.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>o</CODE> - <DD><CODE>def</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="toString(java.lang.Object)"><!-- --></A><H3>
toString</H3>
<PRE>
public static java.lang.String <B>toString</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Extracts String representation of object by either casting or calling
 its toString() method.  Returns null if object is null.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>o</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="toProperCase(java.lang.Object)"><!-- --></A><H3>
toProperCase</H3>
<PRE>
public static java.lang.String <B>toProperCase</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="castToStringArray(java.lang.Object[])"><!-- --></A><H3>
castToStringArray</H3>
<PRE>
public static java.lang.String[] <B>castToStringArray</B>(java.lang.Object[]&nbsp;arr)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMultipleResources(java.util.ResourceBundle, java.lang.String[])"><!-- --></A><H3>
getMultipleResources</H3>
<PRE>
public static java.lang.String[] <B>getMultipleResources</B>(java.util.ResourceBundle&nbsp;rsc,
                                                      java.lang.String[]&nbsp;keys)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="trimTo(java.lang.String, int)"><!-- --></A><H3>
trimTo</H3>
<PRE>
public static java.lang.String <B>trimTo</B>(java.lang.String&nbsp;s,
                                      int&nbsp;maxChars)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isNumeric(java.lang.Object)"><!-- --></A><H3>
isNumeric</H3>
<PRE>
public static boolean <B>isNumeric</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getEncodedString(java.lang.Object, java.lang.String)"><!-- --></A><H3>
getEncodedString</H3>
<PRE>
public static java.lang.String <B>getEncodedString</B>(java.lang.Object&nbsp;obj,
                                                java.lang.String&nbsp;encoding)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="castToUTFNio(java.lang.String, java.lang.String)"><!-- --></A><H3>
castToUTFNio</H3>
<PRE>
public static java.lang.String <B>castToUTFNio</B>(java.lang.String&nbsp;str,
                                            java.lang.String&nbsp;sourceEncoding)
                                     throws java.io.UnsupportedEncodingException,
                                            java.nio.charset.CharacterCodingException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.UnsupportedEncodingException</CODE>
<DD><CODE>java.nio.charset.CharacterCodingException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="castToISONio(java.lang.String, java.lang.String)"><!-- --></A><H3>
castToISONio</H3>
<PRE>
public static java.lang.String <B>castToISONio</B>(java.lang.String&nbsp;str,
                                            java.lang.String&nbsp;sourceEncoding)
                                     throws java.io.UnsupportedEncodingException,
                                            java.nio.charset.CharacterCodingException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.UnsupportedEncodingException</CODE>
<DD><CODE>java.nio.charset.CharacterCodingException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="castToUTF(java.lang.String)"><!-- --></A><H3>
castToUTF</H3>
<PRE>
public static java.lang.String <B>castToUTF</B>(java.lang.String&nbsp;iso_str)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getUTFStringFromDb(java.lang.String, java.lang.String)"><!-- --></A><H3>
getUTFStringFromDb</H3>
<PRE>
public static java.lang.String <B>getUTFStringFromDb</B>(java.lang.String&nbsp;str,
                                                  java.lang.String&nbsp;lang)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="capitalize(java.lang.String)"><!-- --></A><H3>
capitalize</H3>
<PRE>
public static java.lang.String <B>capitalize</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAsStringSeparated(java.util.List, java.lang.String)"><!-- --></A><H3>
getAsStringSeparated</H3>
<PRE>
public static java.lang.String <B>getAsStringSeparated</B>(java.util.List&nbsp;l,
                                                    java.lang.String&nbsp;s)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Text.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../net/tc/utils/SynchronizedMap.html" title="class in net.tc.utils"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../net/tc/utils/TimeTools.html" title="class in net.tc.utils"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?net/tc/utils/Text.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Text.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
